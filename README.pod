=pod

=encoding utf-8

=head1 NAME

Crypt::Diceware - Random passphrase generator loosely based on the Diceware algorithm

=head1 VERSION

version 0.003

=head1 SYNOPSIS

  use Crypt::Diceware;
  my @phrase = words(4); # qw/starker call recur outlaw/

  # with alternate word lists
  use Crypt::Diceware words => { wordlist => 'Original' };
  use Crypt::Diceware words => { wordlist => 'Beale' };

=head1 DESCRIPTION

This module generates a random passphrase of words based loosely on the
L<Diceware|http://world.std.com/~reinhold/diceware.html> algorithm by Arnold G.
Reinhold.

A Diceware passphrase consists of a randomly selected words chosen from a list
of over seven thousand words.  A passphrase of four or five words is likely to
be stronger than typical human-generated passwords, which tend to be
too-short and over-sample common letters ("e") and numbers ("1").

Words are selected by randomly using L<Data::Entropy>, which is reasonably
cryptographically strong.

=for Pod::Coverage method_names_here

=head1 USAGE

By default, this module exports a single subroutine, C<words>, which uses the
L<Crypt::Diceware::Wordlist::Common> word list.

An alternate wordlist may be specified:

  use Crypt::Diceware words => { wordlist => 'Original' };

Exporting is done via L<Sub::Exporter> so any of its features may be used:

  use Crypt::Diceware words => { -as => 'passphrase' };
  my @phrase = passphrase(4);

=head2 words

  my @phrase = words(4);

Takes a positive numeric argument and returns a passphrase of that many
randomly-selected words. In a list context it will return a list of words, as above.
In a scalar context it will return a string with the words separated with a single space character:

  my $phrase = words(4);

Returns the empty list / string if the argument is missing or not a positive number.

=head1 SEE ALSO

Diceware and Crypt::Diceware related:

=over 4

=item *

L<Diceware|http://world.std.com/~reinhold/diceware.html>

=item *

L<Crypt::Diceware::Wordlist::Common>

=item *

L<Crypt::Diceware::Wordlist::Original>

=item *

L<Crypt::Diceware::Wordlist::Beale>

=back

Other CPAN passphrase generators:

=over 4

=item *

L<Crypt::PW44>

=item *

L<Crypt::XkcdPassword>

=item *

L<Review of CPAN password/phrase generators|http://neilb.org/reviews/passwords.html>

=back

About password strength in general:

=over 4

=item *

L<Password Strength (XKCD)|http://xkcd.com/936/>

=item *

L<Password Strength (Wikipedia)|http://en.wikipedia.org/wiki/Password_strength>

=back

=for :stopwords cpan testmatrix url annocpan anno bugtracker rt cpants kwalitee diff irc mailto metadata placeholders metacpan

=head1 SUPPORT

=head2 Bugs / Feature Requests

Please report any bugs or feature requests through the issue tracker
at L<https://github.com/dagolden/crypt-diceware/issues>.
You will be notified automatically of any progress on your issue.

=head2 Source Code

This is open source software.  The code repository is available for
public review and contribution under the terms of the license.

L<https://github.com/dagolden/crypt-diceware>

  git clone git://github.com/dagolden/crypt-diceware.git

=head1 AUTHOR

David Golden <dagolden@cpan.org>

=head1 CONTRIBUTOR

Neil Bowers <neil@bowers.com>

=head1 COPYRIGHT AND LICENSE

This software is Copyright (c) 2013 by David Golden.

This is free software, licensed under:

  The Apache License, Version 2.0, January 2004

